package com.example.demo.controllers;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.propertyeditors.CustomDateEditor;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.WebDataBinder;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.InitBinder;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.example.demo.dto.TreningDTO;
import com.example.demo.services.TreninziService;
import com.example.demo.services.VezbeService;

import jakarta.validation.Valid;
import model.Treninzi;
import model.Vezbe;


@Controller
@RequestMapping("/treninzi/")
public class TreninziController {
	@Autowired
	TreninziService ts;
	
	@Autowired
	VezbeService vs;
	
	@GetMapping("sviTreninzi")
	public String sviTreninzi() {
		return "treninzi";
	}
	
	@GetMapping("dodajTrening")
	public String dodajTrening() {
		return "novi-trening";
	}
	
	@GetMapping("obrisiTrening")
	public String obrisiTrening(@RequestParam(name = "id", required = true) Integer treningId) {
		ts.obrisiTrening(treningId);
		
		return "redirect:/treninzi/sviTreninzi";
	}
	
	@ModelAttribute("treninzi")
	public List<Treninzi> getTreninzi () {
		return ts.getTreninzi();
	}
	
	@ModelAttribute("vezbe")
	public List<Vezbe> getVezbe () {
		return vs.getVezbe("", "-1", "false");
	}
	
	@ModelAttribute("treningDTO")
	public TreningDTO newFile () {
		return new TreningDTO();
	}
	
	@InitBinder
	public void initBinder(WebDataBinder binder) {
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		sdf.setLenient(true);
		binder.registerCustomEditor(Date.class, new CustomDateEditor(sdf, true));
	}
	
	@PostMapping("sacuvajTrening")
	public String sacuvajTrening(@Valid TreningDTO file, BindingResult result, Model m) {
		if (result.hasErrors()) {
			m.addAttribute("errors", result.getFieldErrors());
		} else {
			int ok = ts.uploadTrening(file);
			
			if (ok != -1) {
				m.addAttribute("message", "Trening je uspe≈°no dodat.");
			} else {
				m.addAttribute("message", "Dodavanje treninga nije uspelo.");
			}
		}
		
		return "novi-trening";
	}
}